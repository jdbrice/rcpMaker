<class xmlns="http://jessevdk.github.com/cldoc/1.0" abstract="true" id="PidPhaseSpace" name="PidPhaseSpace">
  <base access="public">
    <type name="InclusiveSpectra" ref="InclusiveSpectra#InclusiveSpectra" />
  </base>
  <constructor abstract="yes" id="PidPhaseSpace::PidPhaseSpace" name="PidPhaseSpace">
    <argument id="PidPhaseSpace::PidPhaseSpace::config" name="config">
      <type name="jdb::XmlConfig" qualifier="*" />
    </argument>
    <argument id="PidPhaseSpace::PidPhaseSpace::np" name="np">
      <type name="string" />
    </argument>
    <argument id="PidPhaseSpace::PidPhaseSpace::fl" name="fl">
      <type name="string" />
    </argument>
    <argument id="PidPhaseSpace::PidPhaseSpace::jp" name="jp">
      <type name="string" />
    </argument>
  </constructor>
  <destructor abstract="yes" id="PidPhaseSpace::~PidPhaseSpace" name="~PidPhaseSpace" />
  <method abstract="yes" id="PidPhaseSpace::analyzeTofTrack" name="analyzeTofTrack" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="PidPhaseSpace::analyzeTofTrack::iTrack" name="iTrack">
      <type name="Int_t" />
    </argument>
    <override name="InclusiveSpectra::analyzeTofTrack" ref="InclusiveSpectra#InclusiveSpectra::analyzeTofTrack" />
  </method>
  <method abstract="yes" id="PidPhaseSpace::analyzeTrack" name="analyzeTrack" override="yes" virtual="yes">
    <brief>*</brief>
    <doc>Analyze a track in the current Event
</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="PidPhaseSpace::analyzeTrack::iTrack" name="iTrack">
      <type name="Int_t" />
    </argument>
    <override name="InclusiveSpectra::analyzeTrack" ref="InclusiveSpectra#InclusiveSpectra::analyzeTrack" />
  </method>
  <method abstract="yes" id="PidPhaseSpace::autoViewport" name="autoViewport" static="yes">
    <brief>*</brief>
    <doc>Computes the upper and lower limits in tof and dedx phase space
</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="PidPhaseSpace::autoViewport::pType" name="pType">
      <type name="string" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::p" name="p">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::lpsr" name="lpsr">
      <type name="PhaseSpaceRecentering" qualifier="*" ref="PhaseSpaceRecentering#PhaseSpaceRecentering" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::tofLow" name="tofLow">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::tofHigh" name="tofHigh">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::dedxLow" name="dedxLow">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::dedxHigh" name="dedxHigh">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::tofPadding" name="tofPadding">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::dedxPadding" name="dedxPadding">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::tofScaledPadding" name="tofScaledPadding">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="PidPhaseSpace::autoViewport::dedxScaledPadding" name="dedxScaledPadding">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="PidPhaseSpace::averageEta" name="averageEta">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="PidPhaseSpace::averageEta::etaBin" name="etaBin">
      <type builtin="yes" name="int" />
    </argument>
  </method>
  <method id="PidPhaseSpace::averageP" name="averageP">
    <brief>*</brief>
    <doc>Calculates the average momentum for a pt, eta bin
</doc>
    <return>
      <doc>the average p in GeV/c</doc>
      <type builtin="yes" name="double" />
    </return>
    <argument id="PidPhaseSpace::averageP::ptBin" name="ptBin">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="PidPhaseSpace::averageP::etaBin" name="etaBin">
      <type builtin="yes" name="int" />
    </argument>
  </method>
  <method id="PidPhaseSpace::averagePt" name="averagePt">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="PidPhaseSpace::averagePt::ptBin" name="ptBin">
      <type builtin="yes" name="int" />
    </argument>
  </method>
  <method abstract="yes" id="PidPhaseSpace::enhanceDistributions" name="enhanceDistributions">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="PidPhaseSpace::enhanceDistributions::avgP" name="avgP">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="PidPhaseSpace::enhanceDistributions::ptBin" name="ptBin">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="PidPhaseSpace::enhanceDistributions::etaBin" name="etaBin">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="PidPhaseSpace::enhanceDistributions::charge" name="charge">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="PidPhaseSpace::enhanceDistributions::dedx" name="dedx">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="PidPhaseSpace::enhanceDistributions::tof" name="tof">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method abstract="yes" id="PidPhaseSpace::postEventLoop" name="postEventLoop" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <override name="InclusiveSpectra::postEventLoop" ref="InclusiveSpectra#InclusiveSpectra::postEventLoop" />
  </method>
  <method abstract="yes" id="PidPhaseSpace::preEventLoop" name="preEventLoop" override="yes" virtual="yes">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <override name="InclusiveSpectra::preEventLoop" ref="InclusiveSpectra#InclusiveSpectra::preEventLoop" />
  </method>
  <method abstract="yes" id="PidPhaseSpace::reportAll" name="reportAll">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="PidPhaseSpace::reportAll::n" name="n">
      <type name="string" />
    </argument>
  </method>
  <method abstract="yes" id="PidPhaseSpace::reportAllDedx" name="reportAllDedx">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" id="PidPhaseSpace::reportAllTof" name="reportAllTof">
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <field access="protected" id="PidPhaseSpace::cfgEnergyLoss" name="cfgEnergyLoss">
    <brief>Configs for</brief>
    <type name="jdb::XmlConfig" qualifier="*" />
  </field>
  <field access="protected" id="PidPhaseSpace::cfgFeedDown" name="cfgFeedDown">
    <type name="jdb::XmlConfig" qualifier="*" />
  </field>
  <field access="protected" id="PidPhaseSpace::binsTof" name="binsTof">
    <brief>Binning</brief>
    <type name="unique_ptr&lt;jdb::HistoBins, default_delete&lt;jdb::HistoBins&gt; &gt;" />
  </field>
  <field access="protected" id="PidPhaseSpace::binsDedx" name="binsDedx">
    <type name="unique_ptr&lt;jdb::HistoBins, default_delete&lt;jdb::HistoBins&gt; &gt;" />
  </field>
  <field access="protected" id="PidPhaseSpace::binsPt" name="binsPt">
    <type name="unique_ptr&lt;jdb::HistoBins, default_delete&lt;jdb::HistoBins&gt; &gt;" />
  </field>
  <field access="protected" id="PidPhaseSpace::binsEta" name="binsEta">
    <type name="unique_ptr&lt;jdb::HistoBins, default_delete&lt;jdb::HistoBins&gt; &gt;" />
  </field>
  <field access="protected" id="PidPhaseSpace::charges" name="charges">
    <type name="vector&lt;int&gt;" />
  </field>
  <field access="protected" id="PidPhaseSpace::tofBinWidth" name="tofBinWidth">
    <brief>these are made on the fly</brief>
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::dedxBinWidth" name="dedxBinWidth">
    <brief>these are made on the fly</brief>
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::tofPadding" name="tofPadding">
    <brief>Plot Ranges</brief>
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::dedxPadding" name="dedxPadding">
    <brief>Plot Ranges</brief>
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::tofScalePadding" name="tofScalePadding">
    <brief>Plot Ranges</brief>
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::dedxScalePadding" name="dedxScalePadding">
    <brief>Plot Ranges</brief>
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::centerSpecies" name="centerSpecies">
    <brief>Phase Space Recentering</brief>
    <type name="string" />
  </field>
  <field access="protected" id="PidPhaseSpace::psrMethod" name="psrMethod">
    <type name="string" />
  </field>
  <field access="protected" id="PidPhaseSpace::dedxSigmaIdeal" name="dedxSigmaIdeal">
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::tofSigmaIdeal" name="tofSigmaIdeal">
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::psr" name="psr">
    <type name="PhaseSpaceRecentering" qualifier="*" ref="PhaseSpaceRecentering#PhaseSpaceRecentering" />
  </field>
  <field access="protected" id="PidPhaseSpace::tofCut" name="tofCut">
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::dedxCut" name="dedxCut">
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::make2D" name="make2D">
    <type builtin="yes" name="bool" />
  </field>
  <field access="protected" id="PidPhaseSpace::makeEnhanced" name="makeEnhanced">
    <type builtin="yes" name="bool" />
  </field>
  <field access="protected" id="PidPhaseSpace::nSigBelow" name="nSigBelow">
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::nSigAbove" name="nSigAbove">
    <type builtin="yes" name="double" />
  </field>
  <field access="protected" id="PidPhaseSpace::binByMomentum" name="binByMomentum">
    <type builtin="yes" name="bool" />
  </field>
  <field access="protected" id="PidPhaseSpace::makeCombinedCharge" name="makeCombinedCharge">
    <type builtin="yes" name="bool" />
  </field>
  <field access="protected" id="PidPhaseSpace::sc" name="sc">
    <type name="unique_ptr&lt;SpectraCorrecter, default_delete&lt;SpectraCorrecter&gt; &gt;" />
  </field>
  <field access="protected" id="PidPhaseSpace::effWeight" name="effWeight">
    <type builtin="yes" name="float" />
  </field>
  <field access="protected" id="PidPhaseSpace::elParams" name="elParams">
    <type name="map&lt;string, unique_ptr&lt;EnergyLossParams&gt;" />
  </field>
  <field access="protected" id="PidPhaseSpace::fdParams" name="fdParams">
    <type name="map&lt;string, vector&lt;unique_ptr&lt;FeedDownParams&gt;" />
  </field>
  <field access="protected" id="PidPhaseSpace::fdWeight" name="fdWeight">
    <type builtin="yes" name="double" />
  </field>
  <method access="protected" id="PidPhaseSpace::feedDownWeight" name="feedDownWeight">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="PidPhaseSpace::feedDownWeight::charge" name="charge">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="PidPhaseSpace::feedDownWeight::pt" name="pt">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method abstract="yes" access="protected" id="PidPhaseSpace::preparePhaseSpaceHistograms" name="preparePhaseSpaceHistograms">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="PidPhaseSpace::preparePhaseSpaceHistograms::plc" name="plc">
      <type name="string" />
    </argument>
  </method>
  <method access="protected" id="PidPhaseSpace::rapidity" name="rapidity">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="PidPhaseSpace::rapidity::pt" name="pt">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="PidPhaseSpace::rapidity::eta" name="eta">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="PidPhaseSpace::rapidity::m" name="m">
      <type builtin="yes" name="double" />
    </argument>
  </method>
</class>